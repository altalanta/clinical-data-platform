[tool.poetry]
name = "clinical-data-platform"
version = "0.1.0"
description = "End-to-end clinical data platform demo: ingest → standardize → warehouse → dbt → analytics → ML → API/UI"
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "clinical_platform", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.2.2"
polars = "^1.5.0"
pyarrow = "^17.0.0"
pydantic = "^2.8.2"
sqlalchemy = "^2.0.34"
duckdb = "^1.0.0"
dbt-duckdb = "^1.8.2"
jinja2 = "^3.1.4"
pandera = "^0.20.3"
great-expectations = "^0.18.14"
scikit-learn = "^1.5.1"
mlflow = "^2.16.0"
fastapi = "^0.114.0"
uvicorn = {version = "^0.30.6", extras=["standard"]}
structlog = "^24.4.0"
rich = "^13.8.0"
pyyaml = "^6.0.2"
typer = "^0.12.5"
python-dotenv = "^1.0.1"
boto3 = "^1.35.17"
moto = "^5.0.14"
prefect = "^3.0.3"
streamlit = "^1.38.0"
scipy = "^1.13.1"
python-json-logger = "^2.0.7"
prometheus-client = "^0.20.0"
matplotlib = "^3.8.0"
plotly = "^5.17.0"
altair = "^5.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.5.0"
hypothesis = "^6.112.1"
ruff = "^0.6.5"
black = "^24.8.0"
mypy = "^1.11.2"
bandit = "^1.7.9"
safety = "^3.2.7"
pre-commit = "^3.8.0"
types-pyyaml = "^6.0.12.20240808"
types-requests = "^2.32.0.20240712"
httpx = "^0.27.2"
mkdocs-material = "^9.5.34"
mkdocs-mermaid2-plugin = "^1.1.1"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
lint.select = ["E","F","I","B","C90","UP","S","N","A","C4","T20","RUF"]
lint.ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true
warn_unreachable = true
exclude = ["dbt/", "docs/", "data/"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --cov=src/clinical_platform --cov-report=term-missing --cov-fail-under=85"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.bandit]
exclude_dirs = ["tests", "docs", "dbt"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_possible for test code

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

